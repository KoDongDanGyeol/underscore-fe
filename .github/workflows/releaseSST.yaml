name: releaseSST
on:
  push:
    branches:
      - release

# Concurrency group name ensures concurrent workflow runs wait for any in-progress job to finish
concurrency:
  group: merge-${{ github.ref }}

permissions:
  id-token: write # This is required for requesting the JWT
  contents: read # This is required for actions/checkout

jobs:
  DeployApp:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Setup Environment
        run: |
          echo "AWS_IAM=$AWS_IAM" >> .env
          echo "AWS_REGION=$AWS_REGION" >> .env
          echo "AWS_PUBLIC_DOMAIN=$AWS_PUBLIC_DOMAIN" >> .env
          echo "PROJECT_ENV=$PROJECT_ENV" >> .env
          echo "NEXT_PUBLIC_PROJECT_ENV=$NEXT_PUBLIC_PROJECT_ENV" >> .env
          echo "NEXT_PUBLIC_API_URL=$NEXT_PUBLIC_API_URL" >> .env
          echo "NEXT_PUBLIC_API_MOCKING_STATUS=$NEXT_PUBLIC_API_MOCKING_STATUS" >> .env
          echo "NEXT_PUBLIC_API_MOCKING_PORT=$NEXT_PUBLIC_API_MOCKING_PORT" >> .env
          echo "NEXT_PUBLIC_API_MOCKING_URL=$NEXT_PUBLIC_API_MOCKING_URL" >> .env
        env:
          AWS_IAM: ${{ secrets.AWS_IAM }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_PUBLIC_DOMAIN: ${{ secrets.AWS_PUBLIC_DOMAIN }}
          PROJECT_ENV: ${{ secrets.PROJECT_ENV }}
          NEXT_PUBLIC_PROJECT_ENV: ${{ secrets.NEXT_PUBLIC_PROJECT_ENV }}
          NEXT_PUBLIC_API_URL: ${{ secrets.NEXT_PUBLIC_API_URL }}
          NEXT_PUBLIC_API_MOCKING_STATUS: ${{ secrets.NEXT_PUBLIC_API_MOCKING_STATUS }}
          NEXT_PUBLIC_API_MOCKING_PORT: ${{ secrets.NEXT_PUBLIC_API_MOCKING_PORT }}
          NEXT_PUBLIC_API_MOCKING_URL: ${{ secrets.NEXT_PUBLIC_API_MOCKING_URL }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_IAM }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Deploy app
        run: |
          npm i && npx sst deploy --stage prod
